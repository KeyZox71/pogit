#!/usr/bin/env python3
# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    sg                                                 :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: mmoussou <mmoussou@student.42angouleme.fr  +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/02/07 01:04:57 by mmoussou          #+#    #+#              #
#    Updated: 2024/02/07 01:14:05 by mmoussou         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

# ------------ credits ------------

__author__ = "y-syo"
__version__ = "0.0.1"
__license__ = "WTFPL"

# ------------ modules ------------

import sys
import os

# ------------ help messages ------------

class Help:
    sg = '''sg

USAGE:
  sg [COMMAND] ...

OPTIONS:
  -h, --help        show this help message and exit.
  -v, --version     print version.

COMMANDS:
  c/commit          Commit changes to the git repo.
  r/remote          Manage the remotes of the repository.
  p/push            Push the current project to all of the remotes.
  i/init            Initialize a repository in the current folder.
'''
    commit = '''sg commit

USAGE:
  sg commit <type> <(optional)denominator> <message>
  sg c <type> <(optional)denominator> <message>


TYPE:
  what's this commit about.

    feature:  [✨] feat(_):
    clean:    [🗑️] clean(_):
    init:     [🎉] init(_):
    norm:     [✏️] norm(_):
    wip:      [🏗️] wip(_):
    fix:      [🔨] fix(_):
    doc:      [📝] doc(_):

DENOMINATOR:
  Which files/subject is this commit about.

MESSAGE:
  More precise description of the commit.
'''
    remote = '''sg remote

USAGE:
  sg remote [SUBCOMMAND] ...
  sg r [SUBCOMMAND] ...

SUBCOMMANDS:
  add               Add a remote to the repo.
  rm/remove         Remove a remote from the repo.
  list              List all active remotes in the repo.
'''

# ------------ global variables ------------

COMMANDS = ["commit", "remote", "push", "init", "c", "r", "p", "i"]

C_TYPES = {"feature": "[✨] feat",
           "clean": "[🗑️] clean",
           "init": "[🎉] init",
           "norm": "[✏️] norm",
           "wip": "[🏗️] wip",
           "fix": "[🔨] fix",
           "doc": "[📝] doc"}


# ------------ commands functions ------------

def commit():
    if (len(sys.argv) < 4 or len(sys.argv) > 5):
        print(Help.commit)
        exit(0)
    c_type = sys.argv[2]
    c_denom = ""
    c_msg = ""
    c_final = ""
    if (len(sys.argv) == 4):
        c_msg = sys.argv[3]
    else:
        c_denom = sys.argv[3]
        c_msg = sys.argv[4]
    if (c_type not in C_TYPES):
        print("Error: type is not valid.")
        exit(0)
    c_final += C_TYPES[c_type]
    if (c_denom):
        c_final += ("(" + c_denom + ")")
    c_final += (": " + c_msg)
    os.system("git add .") # temporary, will change later for specific files commit, with a -f/--files flag
    os.system('git commit -m "' + c_final + '"')


def push():
    if (len(sys.argv) > 3):
        print("Error: Bad usage.")
        exit(0)
    if (len(sys.argv) == 3):
        branch = sys.argv[2]
    else:
        branch = "master"
    remotes = os.listdir(os.getcwd() + "/.git/refs/remotes")
    for remote in remotes:
        os.system("git push " + remote + " " + branch)


# ------------ main function ------------

def main():
    if (".git" not in os.listdir(os.getcwd())):
        print("Unsupported location, are you sure you're at the root of your repository ?")
        exit(0)
    if (len(sys.argv) < 2 or sys.argv[1] == '-h' or sys.argv[1] == '--help' or sys.argv[1] not in COMMANDS):
        print(Help.sg)
        sys.exit(0)
    arg = sys.argv[1]
    if (arg == '-v' or arg == '--version'):
        print("sg version: " + __version__)
        sys.exit(0)
    match (COMMANDS.index(arg) % (len(COMMANDS) / 2)):
        case 0:
            commit()
        case 1:
            remote()
        case 2:
            push()
        case 3:
            init()
        case _:
            print(Help.sg)


if __name__ == '__main__':
    main()
